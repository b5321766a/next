/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule CharacterMetadata
 * @format
 * @flow
 */

import type { DraftInlineStyle } from './DraftInlineStyle'
import type { Record, OrderedSet } from 'immutable'

declare module 'draft-js/lib/CharacterMetadata' {
  declare type CharacterMetadataConfigValueType = DraftInlineStyle | ?string

  declare type CharacterMetadataConfig = {
    style?: CharacterMetadataConfigValueType,
    entity?: CharacterMetadataConfigValueType,
  }

  declare export default class CharacterMetadata extends Record<{
    style: OrderedSet,
    entity: null,
  }> {
    getStyle(): DraftInlineStyle;
    getEntity(): ?string;
    hasStyle(style: string): boolean;
    static applyStyle(
      record: CharacterMetadata,
      style: string
    ): CharacterMetadata;
    static removeStyle(
      record: CharacterMetadata,
      style: string
    ): CharacterMetadata;
    static applyEntity(
      record: CharacterMetadata,
      entityKey: ?string
    ): CharacterMetadata;
    static create(config?: CharacterMetadataConfig): CharacterMetadata;
  }
}
